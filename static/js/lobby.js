// Generated by IcedCoffeeScript 1.6.2d
(function() {
  var AppVM, WSController, randomName;



  randomName = function(n) {
    var c, i;
    c = function() {
      return String.fromCharCode(Math.floor(Math.random() * 26) + 97);
    };
    return ((function() {
      var _i, _results;
      _results = [];
      for (i = _i = 1; 1 <= n ? _i <= n : _i >= n; i = 1 <= n ? ++_i : --_i) {
        _results.push(c());
      }
      return _results;
    })()).join('');
  };

  WSController = (function() {
    function WSController(name) {
      var _this = this;
      this.host = 'ws://' + window.location.hostname + ':3001';
      this.socket = new WebSocket(this.host);
      this.data = ko.observable('{}');
      this.socket.onopen = function() {
        console.log('opening socket');
        return _this.socket.send(name());
      };
      this.socket.onmessage = function(message) {
        console.log('received message', message.data);
        return _this.data(message.data);
      };
      this.socket.onclose = function() {
        return console.log('socket closed');
      };
    }

    return WSController;

  })();

  AppVM = (function() {
    function AppVM() {
      var _this = this;
      this.name = ko.observable(randomName(10));
      this.wscontroller = new WSController(this.name);
      this.nameList = ko.computed(function() {
        var data;
        data = JSON.parse(_this.wscontroller.data());
        if ('names' in data) {
          return data.names;
        }
      });
    }

    return AppVM;

  })();

  $(function() {
    var vm;
    vm = new AppVM;
    return ko.applyBindings(vm);
  });

}).call(this);
